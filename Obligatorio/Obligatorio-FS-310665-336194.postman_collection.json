{
	"info": {
		"_postman_id": "d8e0aba8-a852-4411-b490-aae9c08277bc",
		"name": "Obligatorio-FS-310665-336194 Copy 2",
		"description": "Colección Postman - Obligatorio Full Stack  \n**Estudiantes:** 310665 - 336194",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42449095"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Registro exitoso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"user\", JSON.stringify(response));\r",
									"pm.test(\"Usuario registrado correctamente\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let timestamp = Date.now();\r",
									"let randomNum = Math.floor(Math.random() * 10000);\r",
									"let randomName = pm.variables.replaceIn('{{$randomFullName}}');\r",
									"let password = `Password!${randomNum}`;\r",
									"\r",
									"pm.collectionVariables.set(\"randomName\", randomName);\r",
									"pm.collectionVariables.set(\"randomEmail\", `user${timestamp}@mail.com`);\r",
									"pm.collectionVariables.set(\"randomPassword\", password);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{randomName}}\",\n  \"email\": \"{{randomEmail}}\",\n  \"password\": \"{{randomPassword}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/signup",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"signup"
							]
						},
						"description": "Registro exitoso de un nuevo usuario"
					},
					"response": []
				},
				{
					"name": "Registro con datos incorrectos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Registro rechazado correctamente\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"\",\n  \"password\": \"12\",\n  \"email\": \"email-invalido\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/signup",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"signup"
							]
						},
						"description": "Intento de registro con datos inválidos"
					},
					"response": []
				},
				{
					"name": "Registro usuario duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Registro duplicado rechazado\", () => {\r",
									"    pm.response.to.have.status(409);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Juan\",\n  \"password\": \"Password123.\",\n  \"email\": \"juan@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/signup",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"signup"
							]
						},
						"description": "Intento de registro con email ya existente"
					},
					"response": []
				},
				{
					"name": "Login exitoso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"let token = response.token;",
									"",
									"// Guardar el token para otros requests",
									"pm.collectionVariables.set(\"token\", token);",
									"",
									"// Decodificar la parte del payload ",
									"function decodeBase64Url(str) {",
									"    str = str.replace(/-/g, '+').replace(/_/g, '/');",
									"    while (str.length % 4) str += '=';",
									"    return Buffer.from(str, 'base64').toString('utf8');",
									"}",
									"",
									"let payload = JSON.parse(decodeBase64Url(token.split('.')[1]));",
									"console.log(\"Payload decodificado:\", payload);",
									"",
									"// Guardar datos específicos en variables",
									"pm.collectionVariables.set(\"userId\", payload.id);",
									"pm.collectionVariables.set(\"userEmail\", payload.email);",
									"",
									"pm.test(\"Login exitoso\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									" ",
									" "
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{randomEmail}}\",\n  \"password\": \"{{randomPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/login",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Login exitoso que guarda el token"
					},
					"response": []
				},
				{
					"name": "Login con credenciales incorrectas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login con credenciales inválidas rechazado correctamente\", () => {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"usuario@ejemplo.com\",\n    \"password\": \"password-incorrecto\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/login",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Intento de login con credenciales incorrectas"
					},
					"response": []
				}
			],
			"description": "Endpoints para registro y login de usuarios"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Upgrade PLUS a PREMIUM (exitoso)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"De PLUS a PREMIUM exitoso\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.collectionVariables.set(\"userProfile\", \"PREMIUM\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dev_base_url}}/users/upgrade-premium",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"users",
								"upgrade-premium"
							]
						},
						"description": "Actualiza el perfil del usuario de PLUS a PREMIUM"
					},
					"response": []
				},
				{
					"name": "Upgrade desde cuenta no PLUS (error)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Upgrade rechazado correctamente, ya es PREMIUM\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dev_base_url}}/users/upgrade-premium",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"users",
								"upgrade-premium"
							]
						},
						"description": "Intento de upgrade desde una cuenta que ya es PREMIUM"
					},
					"response": []
				}
			],
			"description": "Gestión de usuarios y cambios de perfil"
		},
		{
			"name": "Routines",
			"item": [
				{
					"name": "Obtener categorías",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Categorías obtenidas exitosamente\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dev_base_url}}/routines/categories",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"routines",
								"categories"
							]
						},
						"description": "Obtiene la lista de categorías disponibles para las rutinas"
					},
					"response": []
				},
				{
					"name": "Crear rutina (exitosa)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Rutina creada exitosamente\", () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// Guardar el ID de la rutina recién creada",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set(\"routineId\", response.rutina._id);",
									"",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Rutina de Fuerza - Tren Superior\",\n  \"description\": \"Rutina enfocada en el desarrollo de fuerza del tren superior\",\n  \"category\": \"FUERZA\",\n  \"exercises\": [\n    {\n      \"name\": \"Press de banca\",\n      \"sets\": 4,\n      \"reps\": 8,\n      \"weight\": 60,\n      \"muscle\": \"Pecho\"\n    },\n    {\n      \"name\": \"Dominadas\",\n      \"sets\": 3,\n      \"reps\": 10,\n      \"weight\": 0,\n      \"muscle\": \"Espalda\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/routines/",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"routines",
								""
							]
						},
						"description": "Creación exitosa de una rutina"
					},
					"response": []
				},
				{
					"name": "Crear rutina (datos inválidos)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Rutina con datos inválidos rechazada\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"\",\n  \"description\": \"Rutina sin nombre\",\n  \"category\": \"CATEGORIA_INEXISTENTE\",\n  \"exercises\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/routines/",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"routines",
								""
							]
						},
						"description": "Intento de crear rutina con datos inválidos"
					},
					"response": []
				},
				{
					"name": "Obtener rutinas del usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Rutinas del usuario obtenidas exitosamente\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dev_base_url}}/routines",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"routines"
							]
						},
						"description": "Obtiene todas las rutinas del usuario autenticado"
					},
					"response": []
				},
				{
					"name": "Obtener rutina por ID (propia)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Rutina obtenida por ID exitosamente\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dev_base_url}}/routines/{{routineId}}",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"routines",
								"{{routineId}}"
							]
						},
						"description": "Obtiene una rutina específica del usuario autenticado"
					},
					"response": []
				},
				{
					"name": "Obtener rutina por ID (ajena - error 403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Rutina con otro ID sin acceso, no obtenida\", () => {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dev_base_url}}/routines/68e710be79cf6797c66d3da1",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"routines",
								"68e710be79cf6797c66d3da1"
							]
						},
						"description": "Intento de acceder a rutina de otro usuario"
					},
					"response": []
				},
				{
					"name": "Actualizar rutina (exitosa)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Rutina actualizada exitosamente\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Rutina de Fuerza - Tren Superior ACTUALIZADA\",\n  \"description\": \"Rutina actualizada con nuevos ejercicios\",\n  \"category\": \"FUERZA\",\n  \"exercises\": [\n    {\n      \"name\": \"Press de banca\",\n      \"sets\": 5,\n      \"reps\": 6,\n      \"weight\": 70,\n      \"muscle\": \"Pecho\"\n    },\n    {\n      \"name\": \"Dominadas\",\n      \"sets\": 4,\n      \"reps\": 8,\n      \"weight\": 10,\n      \"muscle\": \"Espalda\"\n    },\n    {\n      \"name\": \"Sentadillas\",\n      \"sets\": 4,\n      \"reps\": 12,\n      \"weight\": 80,\n      \"muscle\": \"Piernas\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/routines/{{routineId}}",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"routines",
								"{{routineId}}"
							]
						},
						"description": "Actualización exitosa de una rutina existente"
					},
					"response": []
				},
				{
					"name": "Eliminar rutina (exitosa)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Rutina eliminada exitosamente\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dev_base_url}}/routines/{{routineId}}",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"routines",
								"{{routineId}}"
							]
						},
						"description": "Elimina una rutina del usuario autenticado"
					},
					"response": []
				},
				{
					"name": "Contar rutinas del usuario",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dev_base_url}}/routines/count/",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"routines",
								"count",
								""
							]
						},
						"description": "Cuenta el número total de rutinas del usuario"
					},
					"response": []
				}
			],
			"description": "CRUD completo de rutinas de ejercicios"
		},
		{
			"name": "Tests de Límites PLUS/PREMIUM",
			"item": [
				{
					"name": "Registro exitoso para limite plus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"user\", JSON.stringify(response));\r",
									"pm.test(\"Usuario registrado correctamente\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let timestamp = Date.now();\r",
									"let randomNum = Math.floor(Math.random() * 10000);\r",
									"let randomName = pm.variables.replaceIn('{{$randomFullName}}');\r",
									"let password = `Password!${randomNum}`;\r",
									"\r",
									"pm.collectionVariables.set(\"randomName\", randomName);\r",
									"pm.collectionVariables.set(\"randomEmail\", `user${timestamp}@mail.com`);\r",
									"pm.collectionVariables.set(\"randomPassword\", password);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{randomName}}\",\n  \"email\": \"{{randomEmail}}\",\n  \"password\": \"{{randomPassword}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/signup",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"signup"
							]
						},
						"description": "Registro exitoso de un nuevo usuario"
					},
					"response": []
				},
				{
					"name": "Login exitoso para limite plus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"let token = response.token;",
									"",
									"// Guardar el token para otros requests",
									"pm.collectionVariables.set(\"token\", token);",
									"",
									"// Decodificar la parte del payload ",
									"function decodeBase64Url(str) {",
									"    str = str.replace(/-/g, '+').replace(/_/g, '/');",
									"    while (str.length % 4) str += '=';",
									"    return Buffer.from(str, 'base64').toString('utf8');",
									"}",
									"",
									"let payload = JSON.parse(decodeBase64Url(token.split('.')[1]));",
									"console.log(\"Payload decodificado:\", payload);",
									"",
									"// Guardar datos específicos en variables",
									"pm.collectionVariables.set(\"userId\", payload.id);",
									"pm.collectionVariables.set(\"userEmail\", payload.email);",
									"",
									"pm.test(\"Login exitoso\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									" ",
									" "
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{randomEmail}}\",\n  \"password\": \"{{randomPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/login",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Login exitoso que guarda el token"
					},
					"response": []
				},
				{
					"name": "Crear rutinas 1-10 (PLUS)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"dev_base_url\");",
									"const token = pm.collectionVariables.get(\"token\");",
									"if (!baseUrl || !token) { console.error(\"Falta dev_base_url o token\"); throw new Error(\"Vars faltantes\"); }",
									"",
									"const categories = [\"FUERZA\",\"CARDIO\",\"FLEXIBILIDAD\",\"FUNCIONAL\",\"HIIT\"];",
									"",
									"function crear(i = 1) {",
									"  if (i > 9) return;",
									"  const body = {",
									"    name: `Rutina ${i}`,",
									"    description: `Rutina número ${i} para usuario PLUS`,",
									"    category: categories[i % categories.length],",
									"    exercises: [{ name: `Ejercicio ${i}`, sets: 3, reps: 10, weight: 20, muscle: \"General\" }]",
									"  };",
									"",
									"  console.log(\"payload\", body);",
									"",
									"  pm.sendRequest({",
									"    url: `${baseUrl}/routines`,",
									"    method: \"POST\",",
									"    header: { \"Authorization\": `Bearer ${token}`, \"Content-Type\": \"application/json\" },",
									"    body: { mode: \"raw\", raw: JSON.stringify(body) }",
									"  }, (err, res) => {",
									"    console.log(`Rutina ${i} -> status ${res?.code}`, err || res?.text());",
									"    crear(i + 1);",
									"  });",
									"}",
									"crear();"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Rutinas 1 a 10 creadas para alcanzar límite PLUS\", () => {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Rutina de Fuerza - Tren Superior\",\r\n  \"description\": \"Rutina enfocada en el desarrollo de fuerza del tren superior\",\r\n  \"category\": \"FUERZA\",\r\n  \"exercises\": [\r\n    {\r\n      \"name\": \"Press de banca\",\r\n      \"sets\": 4,\r\n      \"reps\": 8,\r\n      \"weight\": 60,\r\n      \"muscle\": \"Pecho\"\r\n    },\r\n    {\r\n      \"name\": \"Dominadas\",\r\n      \"sets\": 3,\r\n      \"reps\": 10,\r\n      \"weight\": 0,\r\n      \"muscle\": \"Espalda\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/routines/",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"routines",
								""
							]
						},
						"description": "Request dummy para ejecutar script que crea rutinas 4-10"
					},
					"response": []
				},
				{
					"name": "Crear rutina 11 PLUS (error límite)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();\r",
									"pm.test(\"Rutina 11 siendo usuario PLUS rechazada correctamente\", () => {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Rutina 11 - Debería Fallar\",\n  \"description\": \"Esta rutina debería dar error por límite PLUS\",\n  \"category\": \"HIIT\",\n  \"exercises\": [\n    {\n      \"name\": \"Ejercicio que no se creará\",\n      \"sets\": 1,\n      \"reps\": 1,\n      \"weight\": 0,\n      \"muscle\": \"Test\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/routines/",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"routines",
								""
							]
						},
						"description": "Intento de crear rutina 11 siendo PLUS (debería fallar)"
					},
					"response": []
				},
				{
					"name": "Upgrade PLUS a PREMIUM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"De PLUS a PREMIUM exitoso\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.collectionVariables.set(\"userProfile\", \"PREMIUM\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dev_base_url}}/users/upgrade-premium",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"users",
								"upgrade-premium"
							]
						},
						"description": "Actualiza el perfil del usuario de PLUS a PREMIUM"
					},
					"response": []
				},
				{
					"name": "Crear rutina 11 PREMIUM (exitosa)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();\r",
									"pm.test(\"Rutina 11 siendo usuario PREMIUM creada correctamente\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Rutina 11 - PREMIUM Success\",\n  \"description\": \"Esta rutina debería crearse exitosamente con PREMIUM\",\n  \"category\": \"HIIT\",\n  \"exercises\": [\n    {\n      \"name\": \"HIIT Avanzado\",\n      \"sets\": 5,\n      \"reps\": 20,\n      \"weight\": 0,\n      \"muscle\": \"HIIT\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dev_base_url}}/routines/",
							"host": [
								"{{dev_base_url}}"
							],
							"path": [
								"routines",
								""
							]
						},
						"description": "Crear rutina 11 siendo PREMIUM (debería ser exitosa)"
					},
					"response": []
				}
			],
			"description": "Tests específicos para validar límites de rutinas según perfil"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "dev_base_url",
			"value": "http://localhost:3000/api/v1"
		},
		{
			"key": "prod_base_url",
			"value": "https://tu-app.vercel.app/api/v1"
		},
		{
			"key": "userProfile",
			"value": "PLUS"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "userEmail",
			"value": ""
		},
		{
			"key": "user",
			"value": ""
		},
		{
			"key": "routineId",
			"value": ""
		},
		{
			"key": "token_premium",
			"value": ""
		},
		{
			"key": "randomName",
			"value": ""
		},
		{
			"key": "randomEmail",
			"value": ""
		},
		{
			"key": "randomPassword",
			"value": ""
		}
	]
}